AWSTemplateFormatVersion: "2010-09-09"
Description: Project IAM resources


Parameters:
  ProjectName:
    Description: Name of the project
    Type: String
  
  EnvType:
    Description: Environment type
    Type: String
    AllowedValues: [dev, test, prod]


Resources:
# IAM Roles
  IamRoleCodeDeploy:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "sts:AssumeRole"
            Principal:
              Service:
                - codedeploy.ap-southeast-2.amazonaws.com
      Description: Allows CodeDeploy applications to run EC2 instance
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole
      RoleName: !Sub "${ProjectName}-${EnvType}-codedeploy-iam-role"

  IamRoleEc2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - ec2.amazonaws.com
      Description: Allows CodeDeploy to run EC2 instances to read and write to S3 bucket
      ManagedPolicyArns:
        - !Ref IamManagedPolicyS3Access
        - !Ref IamManagedPolicyCodeDeploy
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforAWSCodeDeploy
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole
      RoleName: !Sub "${ProjectName}-${EnvType}-imageingestionec2-iam-role"
      Tags:
        - Key: description
          Value: Allows CodeDeploy to run EC2 instances to read and write to S3 bucket

# IAM Instance Profile
  IamEc2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: !Ref IamRoleEc2
      Path: "/"
      Roles:
        - !Ref IamRoleEc2

# IAM Managed Policies
  IamManagedPolicyCodeDeploy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: CodeDeploy service role to run EC2 instances
      ManagedPolicyName: !Sub "${ProjectName}-${EnvType}-runec2-codedeploy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowRunEc2
            Effect: Allow
            Action:
              - ec2:RunInstances
              - ec2:CreateTags
            Resource: !Sub "arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:*:${ProjectName}-${EnvType}*"
          - Sid: AllowPassIamRole
            Effect: Allow
            Action:
              - iam:PassRole
            Resource: !Sub "arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:*:${ProjectName}-${EnvType}*"
          - Sid: AccessCodeDeploy
            Effect: Allow
            Action:
              - codedeploy:*
            Resource: "*"

  IamManagedPolicyS3Access:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Allows EC2 instance to write to S3 bucket
      ManagedPolicyName: !Sub "${ProjectName}-${EnvType}-read-write-s3"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowListBucketForProjectOnly
            Effect: Allow
            Action:
              - s3:List*
              - s3:Get*
            Resource:
              - !Sub "arn:aws:s3:::${ProjectName}-${EnvType}*"
              - arn:aws:s3:::aws-codedeploy-ap-northeast-2/*
          - Sid: AllowModifyBucketObjectsForProjectOnly
            Effect: Allow
            Action:
              - s3:*Object
            Resource: !Sub "arn:aws:s3:::${ProjectName}-${EnvType}*/*"

Outputs:
  IamManagedPolicyS3AccessArn:
    Description: Allows EC2 instance to write to S3 bucket
    Value: !Ref IamManagedPolicyS3Access
    Export:
      Name: !Sub "${AWS::StackName}-IamManagedPolicyS3AccessArn"
  
  IamEc2InstanceProfileName:
    Description: EC2 instance profile name for image ingestion pipeline
    Value: !Ref IamEc2InstanceProfile
    Export:
      Name: !Sub "${AWS::StackName}-IamEc2InstanceProfileName"
  
  IamRoleCodeDeployARN:
    Description: ARN for CodeDeploy IAM role
    Value: !GetAtt IamRoleCodeDeploy.Arn
    Export:
      Name: !Sub "${AWS::StackName}-IamRoleCodeDeployARN"

  IamStackName:
    Description: Name of the IAM stack after deployment
    Value: !Sub ${AWS::StackName}